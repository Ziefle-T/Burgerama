//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------
using Client.Server.Models;

namespace Client.Server.Services
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IArticleService")]
    public interface IArticleService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/GetAll", ReplyAction = "http://tempuri.org/IArticleService/GetAllResponse")]
        Article[] GetAll();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/GetAll", ReplyAction = "http://tempuri.org/IArticleService/GetAllResponse")]
        System.Threading.Tasks.Task<Article[]> GetAllAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/Add", ReplyAction = "http://tempuri.org/IArticleService/AddResponse")]
        bool Add(Article article);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/Add", ReplyAction = "http://tempuri.org/IArticleService/AddResponse")]
        System.Threading.Tasks.Task<bool> AddAsync(Article article);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/Delete", ReplyAction = "http://tempuri.org/IArticleService/DeleteResponse")]
        bool Delete(int articleId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/Delete", ReplyAction = "http://tempuri.org/IArticleService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int articleId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdateArticleNumber", ReplyAction = "http://tempuri.org/IArticleService/UpdateArticleNumberResponse")]
        bool UpdateArticleNumber(int articleId, string articleNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdateArticleNumber", ReplyAction = "http://tempuri.org/IArticleService/UpdateArticleNumberResponse")]
        System.Threading.Tasks.Task<bool> UpdateArticleNumberAsync(int articleId, string articleNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdateName", ReplyAction = "http://tempuri.org/IArticleService/UpdateNameResponse")]
        bool UpdateName(int articleId, string name);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdateName", ReplyAction = "http://tempuri.org/IArticleService/UpdateNameResponse")]
        System.Threading.Tasks.Task<bool> UpdateNameAsync(int articleId, string name);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdateDescription", ReplyAction = "http://tempuri.org/IArticleService/UpdateDescriptionResponse")]
        bool UpdateDescription(int articleId, string description);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdateDescription", ReplyAction = "http://tempuri.org/IArticleService/UpdateDescriptionResponse")]
        System.Threading.Tasks.Task<bool> UpdateDescriptionAsync(int articleId, string description);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdatePrice", ReplyAction = "http://tempuri.org/IArticleService/UpdatePriceResponse")]
        bool UpdatePrice(int articleId, decimal price);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IArticleService/UpdatePrice", ReplyAction = "http://tempuri.org/IArticleService/UpdatePriceResponse")]
        System.Threading.Tasks.Task<bool> UpdatePriceAsync(int articleId, decimal price);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArticleServiceChannel : IArticleService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArticleServiceClient : System.ServiceModel.ClientBase<IArticleService>, IArticleService
    {

        public ArticleServiceClient()
        {
        }

        public ArticleServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public ArticleServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ArticleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ArticleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public Article[] GetAll()
        {
            return base.Channel.GetAll();
        }

        public System.Threading.Tasks.Task<Article[]> GetAllAsync()
        {
            return base.Channel.GetAllAsync();
        }

        public bool Add(Article article)
        {
            return base.Channel.Add(article);
        }

        public System.Threading.Tasks.Task<bool> AddAsync(Article article)
        {
            return base.Channel.AddAsync(article);
        }

        public bool Delete(int articleId)
        {
            return base.Channel.Delete(articleId);
        }

        public System.Threading.Tasks.Task<bool> DeleteAsync(int articleId)
        {
            return base.Channel.DeleteAsync(articleId);
        }

        public bool UpdateArticleNumber(int articleId, string articleNumber)
        {
            return base.Channel.UpdateArticleNumber(articleId, articleNumber);
        }

        public System.Threading.Tasks.Task<bool> UpdateArticleNumberAsync(int articleId, string articleNumber)
        {
            return base.Channel.UpdateArticleNumberAsync(articleId, articleNumber);
        }

        public bool UpdateName(int articleId, string name)
        {
            return base.Channel.UpdateName(articleId, name);
        }

        public System.Threading.Tasks.Task<bool> UpdateNameAsync(int articleId, string name)
        {
            return base.Channel.UpdateNameAsync(articleId, name);
        }

        public bool UpdateDescription(int articleId, string description)
        {
            return base.Channel.UpdateDescription(articleId, description);
        }

        public System.Threading.Tasks.Task<bool> UpdateDescriptionAsync(int articleId, string description)
        {
            return base.Channel.UpdateDescriptionAsync(articleId, description);
        }

        public bool UpdatePrice(int articleId, decimal price)
        {
            return base.Channel.UpdatePrice(articleId, price);
        }

        public System.Threading.Tasks.Task<bool> UpdatePriceAsync(int articleId, decimal price)
        {
            return base.Channel.UpdatePriceAsync(articleId, price);
        }
    }
}
